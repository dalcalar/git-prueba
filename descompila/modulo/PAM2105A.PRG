 SET CENTURY ON
 PUBLIC afIl, x, ntM1, ntM2
 STORE "0000" TO ntM1
 STORE "0001" TO ntM2
 STORE 01 TO meRr
 DIMENSION afIl[27, 4]
 STORE 1 TO x
 afIl[x, 1] = "FTM1COD"
 afIl[x, 2] = "C"
 afIl[x, 3] = mtMa
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1CDG"
 afIl[x, 2] = "C"
 afIl[x, 3] = 20
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1DES"
 afIl[x, 2] = "C"
 afIl[x, 3] = 120
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1DCR"
 afIl[x, 2] = "C"
 afIl[x, 3] = 80
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1CUC"
 afIl[x, 2] = "C"
 afIl[x, 3] = 2
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1NUC"
 afIl[x, 2] = "C"
 afIl[x, 3] = 30
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1CUX"
 afIl[x, 2] = "C"
 afIl[x, 3] = 2
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1NUX"
 afIl[x, 2] = "C"
 afIl[x, 3] = 30
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1MON"
 afIl[x, 2] = "C"
 afIl[x, 3] = 2
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1SIG"
 afIl[x, 2] = "C"
 afIl[x, 3] = 30
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1TCA"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1FOB"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM1CFR"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM1CIF"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM1PD1"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1PD2"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1PD3"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1PD4"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1PD5"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1PD6"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1PD7"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1PD8"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM1FAC"
 afIl[x, 2] = "N"
 afIl[x, 3] = 10
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM1CM3"
 afIl[x, 2] = "C"
 afIl[x, 3] = 70
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM1FO1"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM1CF1"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM1CI1"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE "TM01"+ntM1+meXt TO mdBf
 DO WHILE .T.
      ntM1 = STRTRAN(STR(VAL(ntM1)+1, 4, 0), " ", "0")
      STORE "TM01"+ntM1+meXt TO mdBf
      If .not.File("&mDBF")
           EXIT
      ENDIF
      IF ntM1="9999"
           STORE "Error: muchos Archivos Temporales..." TO mmSj
           DO poNmsj
           RETURN
      ENDIF
 ENDDO
 CREATE TABLE (mdBf) FROM ARRAY afIl
 Use &mDBF Exclusive
 INDEX ON ALLTRIM(ftM1cod)+"*"+ALLTRIM(ftM1cdg)+"*" TAG ftM1cod
 INDEX ON ALLTRIM(ftM1cod)+"*" TAG ftM1co1
 CLOSE DATABASES
 CLOSE INDEXES
 DIMENSION afIl[28, 4]
 STORE 1 TO x
 afIl[x, 1] = "FTM2REC"
 afIl[x, 2] = "N"
 afIl[x, 3] = 4
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2COD"
 afIl[x, 2] = "C"
 afIl[x, 3] = mtMa
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2CDG"
 afIl[x, 2] = "C"
 afIl[x, 3] = 20
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2DES"
 afIl[x, 2] = "C"
 afIl[x, 3] = 120
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2DCR"
 afIl[x, 2] = "C"
 afIl[x, 3] = 80
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2CUC"
 afIl[x, 2] = "C"
 afIl[x, 3] = 2
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2NUC"
 afIl[x, 2] = "C"
 afIl[x, 3] = 30
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2CUX"
 afIl[x, 2] = "C"
 afIl[x, 3] = 2
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2NUX"
 afIl[x, 2] = "C"
 afIl[x, 3] = 30
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2MON"
 afIl[x, 2] = "C"
 afIl[x, 3] = 2
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2SIG"
 afIl[x, 2] = "C"
 afIl[x, 3] = 30
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2TCA"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2FOB"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM2CFR"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM2CIF"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM2PD1"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2PD2"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2PD3"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2PD4"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2PD5"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2PD6"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2PD7"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2PD8"
 afIl[x, 2] = "N"
 afIl[x, 3] = 7
 afIl[x, 4] = 3
 STORE x+1 TO x
 afIl[x, 1] = "FTM2FAC"
 afIl[x, 2] = "N"
 afIl[x, 3] = 10
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM2CM3"
 afIl[x, 2] = "C"
 afIl[x, 3] = 70
 afIl[x, 4] = 0
 STORE x+1 TO x
 afIl[x, 1] = "FTM2FO1"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM2CF1"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE x+1 TO x
 afIl[x, 1] = "FTM2CI1"
 afIl[x, 2] = "N"
 afIl[x, 3] = 15
 afIl[x, 4] = 6
 STORE "TM01"+ntM2+meXt TO mdBf
 DO WHILE .T.
      ntM2 = STRTRAN(STR(VAL(ntM2)+1, 4, 0), " ", "0")
      STORE "TM01"+ntM2+meXt TO mdBf
      If .not.File("&mDBF")
           EXIT
      ENDIF
      IF ntM2="9999"
           STORE "Error: muchos Archivos Temporales..." TO mmSj
           DO poNmsj
           DO deL_file2 WITH "1", "S"
           RETURN
      ENDIF
 ENDDO
 CREATE TABLE (mdBf) FROM ARRAY afIl
 Use &mDBF Exclusive
 INDEX ON ftM2rec TAG ftM2rec
 CLOSE DATABASES
 CLOSE INDEXES
 RELEASE afIl, x
 STORE 99 TO mkEy
 SELECT 1
 DO abR_0000a IN PUX0000A WITH "2105", "A"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared Alias Cab_Lista
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F2105PRV
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 2
 DO abR_0000a IN PUX0000A WITH "2106", "A"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared Alias Det_Lista
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F2106PRV
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 3
 DO abR_0000a IN PUX0000A WITH "2101", "A"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Proveedores
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F2101COD
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 4
 DO abR_0000a IN PUX0000A WITH "2102", "A"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Sucursal
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F2102COD
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 5
 DO abR_0000a IN PUX0000A WITH "2111", "A"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Productos
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F2111COD
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 6
 DO abR_0000a IN PUX0000A WITH "9226", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Monedas
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9226COD
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 7
 DO abR_0000a IN PUX0000A WITH "9111", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared Alias Cambio
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9111FEM
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 8
 DO abR_0000a IN PUX0000A WITH "9211", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Tip_Prod
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9211TIP
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 GOTO TOP
 IF BOF() .OR. EOF()
      STORE "Archivo Utilitario de Tipos de Productos vacío" TO mmSj
      STORE mmSj+"..."+CHR(13)+CHR(13)+ ;
            "PRESIONAR UNA TECLA PARA REGRESAR AL MENÚ..." TO mmSj
      WAIT WINDOW NOCLEAR ALLTRIM(mmSj)
      WAIT CLEAR
      DO deL_file1
      RETURN
 ENDIF
 SELECT 9
 DO abR_0000a IN PUX0000A WITH "9213", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Unidad
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9213UNI
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 GOTO TOP
 IF BOF() .OR. EOF()
      STORE "Archivo Utilitario de Unidades de Medida vacío" TO mmSj
      STORE mmSj+"..."+CHR(13)+CHR(13)+ ;
            "PRESIONAR UNA TECLA PARA REGRESAR AL MENÚ..." TO mmSj
      WAIT WINDOW NOCLEAR ALLTRIM(mmSj)
      WAIT CLEAR
      DO deL_file1
      RETURN
 ENDIF
 SELECT 10
 DO abR_0000a IN PUX0000A WITH "9221", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Primero
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9221DES
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 11
 DO abR_0000a IN PUX0000A WITH "9222", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Segundo
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9222DES
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 12
 DO abR_0000a IN PUX0000A WITH "9223", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Tercero
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9223DES
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 13
 DO abR_0000a IN PUX0000A WITH "9224", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Cuarto
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9224DES
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 14
 DO abR_0000a IN PUX0000A WITH "9225", "U"
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 Use &mDBF Shared NoUpdate Alias Quinto
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO F9225DES
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 15
 DO prO_virtual WITH 1
 SELECT 16
 STORE "TM01"+ntM1+meXt TO mdBf
 Use &mDBF Exclusive Alias Temporal
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SELECT 17
 STORE "TM01"+ntM2+meXt TO mdBf
 Use &mDBF Exclusive Alias Temporal_2
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 SET ORDER TO FTM2REC
 IF mkEy=k_Esc
      DO deL_file1
      RETURN
 ENDIF
 STORE 00 TO meRr
 PUBLIC viTe, viT1, ciTx, viOm, vcL0, vpIc, ckEy, vsW0, vsW1, vsW2, vsW3,  ;
        vsW4, vsWw
 PUBLIC csWw, vsWr, irEc, vrEc, frEc, urEc, crEc, crE1, xrEc, ifIl, ufIl,  ;
        vfIl, ffIl
 PUBLIC cfIl, ifFs, ufFs, vfFs, ffFs, cfFs, ifFr, ufFr, vfFr, ffFr, cfFr,  ;
        ifFt, ufFt
 PUBLIC vfFt, ffFt, ifFu, ufFu, vfFu, ffFu, ifFv, ufFv, vfFv, ffFv, ifFw,  ;
        ufFw, vfFw
 PUBLIC ffFw, ifFx, ufFx, vfFx, ffFx, vfB1, vfB2, vfB3, vfB4, vfB5, vfB6,  ;
        vcB1, vcB2
 PUBLIC vcB3, vcB4, vcB5, vcB6, vcB7, vtB1, vtB2, vtB3, vtB4, vdIa, idIa,  ;
        udIa, xdIa
 PUBLIC vmEs, imEs, umEs, xmEs, vaNo, iaNo, uaNo, xaNo, vpRv, ipRv, upRv,  ;
        cpRv, xpRv
 PUBLIC voP1, ioP1, uoP1, voP2, ioP2, uoP2, voP3, ioP3, uoP3, voP4, ioP4,  ;
        uoP4, voP5
 PUBLIC ioP5, uoP5, voP6, ioP6, uoP6, voP7, ioP7, uoP7, vtPo, itPo, utPo,  ;
        xtPo, ctPo
 PUBLIC vnTp, inTp, unTp, cnTp, vdC1, idC1, udC1, cdC1, vdC2, idC2, udC2,  ;
        cdC2, vdC3
 PUBLIC idC3, udC3, cdC3, vdC4, idC4, udC4, cdC4, vdC5, idC5, udC5, cdC5,  ;
        vdC6, idC6
 PUBLIC udC6, cdC6, vdC7, idC7, udC7, cdC7, vcDg, icDg, ucDg, ccDg, vdCc,  ;
        idCc, udCc
 PUBLIC cdCc, vlEt, vnEm, vtI1, vtI2, vtI3, vtI4, cpR1, vnPr, xnPr, vsUc,  ;
        vdIr, vdIs
 PUBLIC vfEm, vfEc, cfEc, xfEc, vrF1, vrF2, vcOd, ccOd, vcD1, vdEs, vdCr,  ;
        vcUc, vnUc
 PUBLIC vcUx, vnUx, vmNd, vsIg, vtCa, vfOb, vcFr, vcIf, vpD1, vpD2, vpD3,  ;
        vpD4, vpD5
 PUBLIC vpD6, vpD7, vpD8, vfCt, vcM3, vsTo, csTo, vmTt, vtIp, vpIe, vtP1,  ;
        icLn, ucLn
 PUBLIC vuLt, vfO1, vcF1, vcI1
 PUBLIC vpAn_11, vpAn_let, vpAn_le1, vpAn_le2, vpAn_le3, vpAn_le4, vpAn_le5
 STORE DATE() TO vfEc
 STORE SPACE(25) TO vdIs
 STORE SPACE(80) TO vdCr
 STORE SPACE(120) TO vdEs
 STORE SPACE(02) TO vsUc, vmNd
 STORE SPACE(04) TO vpRv, cpRv
 STORE SPACE(70) TO vrF1, vrF2, vnPr, vdIr, vcM3
 STORE 99 TO mkEy
 STORE 00 TO viT1, vfO1, vcF1, vcI1
 STORE 01 TO viOm, viTe, vsW0, vsW1, vsW2, vsW3, vsW4, irEc, vrEc, vtIp
 STORE 00 TO frEc, urEc, crEc, cfIl, viT1, vpD1, vpD2, vpD3, vpD4, vpD5,  ;
       vpD6, vpD7, vpD8, vfCt
 STORE CTOD("  /  /  ") TO cfEc
 DO CASE
      CASE mdEc=0
           STORE "9999,999,999" TO vpIc
      CASE mdEc=1
           STORE "99,999,999.9" TO vpIc
      CASE mdEc=2
           STORE "9,999,999.99" TO vpIc
      CASE mdEc=3
           STORE "9999,999.999" TO vpIc
      CASE mdEc=4
           STORE "999,999.9999" TO vpIc
 ENDCASE
 SET READBORDER ON
 DO p00_2105a WITH "0"
 IF mkEy=k_Esc
      DO deL_files
      RETURN
 ENDIF
 DO p1_0000a
 DO WHILE .T.
      DO reS_0000a
      IF mrEs<>mrSs
           DO p00_2105a WITH "1"
           IF mkEy=k_Esc
                EXIT
           ENDIF
      ENDIF
      IF mkEy=k_Clic
           DO clP_coo
           DO clP_2105a
           IF mkEy=k_Esc
                EXIT
           ENDIF
      ENDIF
      DO CASE
           CASE (mkEy=k_F2 .OR. mkEy=k_F4) .AND. viTe>2
                STORE 99 TO mkEy
           CASE (mkEy=k_F3 .OR. mkEy=k_Ctrl_del) .AND. viTe<>1
                STORE 99 TO mkEy
           CASE (mkEy=k_F2 .OR. mkEy=k_F3) .AND. viTe=1
                = INKEY(0.01)
                SELECT prOveedores
                SET FILTER TO f2101est<>"9"
                GOTO TOP
                IF BOF() .OR. EOF()
                     STORE "No hay datos registrados..." TO mmSj
                     STORE 99 TO mkEy
                     SET FILTER TO
                     DO poNmsj
                     LOOP
                ENDIF
                IF mkEy=k_F3
                     SET FILTER TO AT(UPPER(ALLTRIM(vnPr)), UPPER(ALLTRIM(f2101nom)))<>0 .AND. f2101est<>"9"
                     GOTO TOP
                     IF BOF() .OR. EOF()
                          STORE "No hay Proveedores que contengan la palabra o frase..."  ;
                                TO mmSj
                          STORE 99 TO mkEy
                          SET FILTER TO
                          DO poNmsj
                          LOOP
                     ENDIF
                     DO prEsiona WITH "2", "BUSCAR", vfB1, vcB1
                ELSE
                     DO prEsiona WITH "2", "CONSUL", vfB1, vcB1
                ENDIF
                IF mkEy=k_Esc
                     EXIT
                ENDIF
                DO orD_0000a WITH "2101", "A", "F2101NOM", "A"
                IF mkEy=k_Esc
                     EXIT
                ENDIF
                SET NEAR ON
                SEEK UPPER(ALLTRIM(vnPr))
                SET NEAR OFF
                DO q1_0000a
                SET CONFIRM ON
                ACTIVATE POPUP vtB1 REST
                SET CONFIRM OFF
                DO p1_0000a
                DO orD_0000a WITH "2101", "A", "F2101COD", "A"
                IF mkEy=k_Esc
                     EXIT
                ENDIF
                SET FILTER TO
                IF mkEy=k_Enter
                     STORE f2101cod TO vpRv
                     STORE f2101nom TO vnPr
                     STORE f2101tpo TO vtIp
                     IF vtIp<1 .OR. vtIp>2
                          STORE 1 TO vtIp
                     ENDIF
                     IF miMp=2 .AND. vtIp=2
                          STORE 1 TO vtIp
                     ENDIF
                     SELECT suCursal
                     SEEK vpRv
                     IF  .NOT. EOF()
                          STORE f2102suc TO vsUc
                          STORE f2102dir TO vdIr
                          STORE f2102dis TO vdIs
                          DO prEsiona WITH "1", "CONSUL", vfB4, vcB4
                     ELSE
                          STORE SPACE(02) TO vsUc
                          STORE SPACE(25) TO vdIs
                          STORE SPACE(70) TO vdIr
                          DO prEsiona WITH "3", "CONSUL", vfB4, vcB4
                     ENDIF
                     IF mkEy=k_Esc
                          EXIT
                     ENDIF
                     DO prEsiona WITH "1", "DESCAR", vfB3, vcB3
                     IF mkEy=k_Esc
                          EXIT
                     ENDIF
                     DO prV_2105a WITH "1"
                ENDIF
                DO prEsiona WITH "1", "CONSUL", vfB1, vcB1
                IF mkEy=k_Esc
                     EXIT
                ENDIF
                DO prEsiona WITH "1", "BUSCAR", vfB2, vcB2
                IF mkEy=k_Esc
                     EXIT
                ENDIF
           CASE mkEy=k_Ctrl_del
                = INKEY(0.01)
                STORE SPACE(02) TO vsUc
                STORE SPACE(25) TO vdIs
                STORE SPACE(04) TO vpRv
                STORE SPACE(70) TO vnPr, vdIr
                DO prV_2105a WITH "2"
                DO prEsiona WITH "3", "DESCAR", vfB3, vcB3
                IF mkEy=k_Esc
                     EXIT
                ENDIF
                DO prEsiona WITH "3", "CONSUL", vfB4, vcB4
                IF mkEy=k_Esc
                     EXIT
                ENDIF
           CASE mkEy=k_F4 .AND. viTe<3
                = INKEY(0.01)
                SELECT caB_lista
                GOTO TOP
                IF BOF() .OR. EOF()
                     STORE "No hay Listas registradas..." TO mmSj
                     SET FILTER TO
                     STORE 99 TO mkEy
                     DO poNmsj
                     LOOP
                ENDIF
                STORE vpRv TO cpR1
                STORE vfEc TO vfEm
                SAVE SCREEN TO vpAn_11
                DO paC2105w
                IF mkEy=k_Esc
                     EXIT
                ENDIF
                RESTORE SCREEN FROM vpAn_11
                SELECT caB_lista
                DO CASE
                     CASE mkEy=k_Enter
                          STORE f2105prv TO vpRv
                          STORE f2105fem TO vfEc
                          SELECT prOveedores
                          SEEK vpRv
                          IF  .NOT. EOF()
                               STORE f2101nom TO vnPr
                               STORE f2101tpo TO vtIp
                               IF vtIp<1 .OR. vtIp>2
                                    STORE 1 TO vtIp
                               ENDIF
                               IF miMp=2 .AND. vtIp=2
                                    STORE 1 TO vtIp
                               ENDIF
                          ENDIF
                          SELECT suCursal
                          SEEK vpRv
                          IF  .NOT. EOF()
                               STORE f2102suc TO vsUc
                               STORE f2102dir TO vdIr
                               STORE f2102dis TO vdIs
                          ELSE
                               STORE SPACE(02) TO vsUc
                               STORE SPACE(25) TO vdIs
                               STORE SPACE(70) TO vdIr
                          ENDIF
                          DO prV_2105a WITH "1"
                     OTHERWISE
                          STORE cpR1 TO vpRv
                          STORE 99 TO mkEy
                ENDCASE
           CASE mkEy=k_F2 .AND. viTe=2
                = INKEY(0.01)
                SELECT caB_lista
                GOTO TOP
                IF BOF() .OR. EOF()
                     STORE "No hay Listas registradas..." TO mmSj
                     SET FILTER TO
                     STORE 99 TO mkEy
                     DO poNmsj
                     LOOP
                ENDIF
                DO prEsiona WITH "2", "CONSUL", vfB5, vcB5
                IF mkEy=k_Esc
                     RETURN
                ENDIF
                SAVE SCREEN TO vpAn_11
                DO paC2106w WITH "PAM2105A"
                IF mkEy=k_Esc
                     EXIT
                ENDIF
                RESTORE SCREEN FROM vpAn_11
                SELECT caB_lista
                DO CASE
                     CASE mkEy=k_Enter
                          STORE f2105fem TO vfEc
                     OTHERWISE
                          STORE 99 TO mkEy
                ENDCASE
                DO prEsiona WITH "1", "CONSUL", vfB5, vcB5
                IF mkEy=k_Esc
                     RETURN
                ENDIF
      ENDCASE
      DO CASE
           CASE mkEy=k_F1
                DO hl1_2105a
           CASE mkEy=k_F10
                DO reTorna
           CASE mkEy=k_F12
                DO p00_2105a WITH "1"
                IF mkEy=k_Esc
                     EXIT
                ENDIF
           CASE mkEy=k_Esc .AND. viTe=1
                STORE 99 TO mkEy
                EXIT
           CASE mkEy=k_Ctrl_home .AND. viTe=1
                STORE "Estás en el primer campo...    " TO mmSj
           CASE mkEy=k_Ctrl_end .AND. viTe=4
                STORE "Estás en el último campo...    " TO mmSj
           CASE mkEy=k_Ctrl_left .AND. viTe<>2
                STORE "No hay campos a la izquierda..." TO mmSj
           CASE mkEy=k_Up .AND. viTe<3
                STORE "No hay más campos arriba...    " TO mmSj
           CASE mkEy=k_Esc .OR. mkEy=k_Ctrl_home
                STORE 99 TO mkEy
                STORE 01 TO viTe
           CASE mkEy=k_F5 .AND. LEN(ALLTRIM(vpRv))=0
                STORE "No se ha elegido Proveedor..." TO mmSj
           CASE mkEy=k_F5
                DO diR_2105a
           CASE mkEy=k_Enter .OR. mkEy=k_Ctrl_right
                DO veR_2105a
                IF mkEy<>99
                     DO CASE
                          CASE viTe=4
                               DO deT_2105a
                               IF mkEy=k_Esc
                                    EXIT
                               ENDIF
                               STORE 99 TO mkEy
                          OTHERWISE
                               STORE viTe+1 TO viTe
                     ENDCASE
                ENDIF
           CASE mkEy=k_Ctrl_left
                STORE viTe-1 TO viTe
           CASE mkEy=k_Down
                DO veR_2105a
                IF mkEy<>99
                     DO CASE
                          CASE viTe=4
                               DO deT_2105a
                               IF mkEy=k_Esc
                                    EXIT
                               ENDIF
                               STORE 99 TO mkEy
                          CASE viTe=1
                               STORE 2 TO viTe
                               DO veR_2105a
                               IF mkEy<>99
                                    STORE 3 TO viTe
                               ENDIF
                          OTHERWISE
                               STORE viTe+1 TO viTe
                     ENDCASE
                ENDIF
           CASE mkEy=k_Up
                DO CASE
                     CASE viTe=3
                          STORE 1 TO viTe
                     OTHERWISE
                          STORE viTe-1 TO viTe
                ENDCASE
           CASE mkEy=k_Ctrl_end
                STORE 4 TO ciTx
                DO WHILE viTe<ciTx .AND. mkEy<>99
                     DO veR_2105a
                     IF mkEy<>99
                          STORE viTe+1 TO viTe
                     ENDIF
                ENDDO
           CASE mkEy=k_Tab
                STORE 4 TO ciTx
                DO WHILE viTe<=ciTx .AND. mkEy<>99
                     DO veR_2105a
                     IF mkEy<>99
                          STORE viTe+1 TO viTe
                     ENDIF
                ENDDO
                IF mkEy<>99
                     DO deT_2105a
                     IF mkEy=k_Esc
                          EXIT
                     ENDIF
                     STORE 99 TO mkEy
                ENDIF
      ENDCASE
      IF LEN(ALLTRIM(mmSj))<>0
           DO poNmsj
           STORE 99 TO mkEy
      ENDIF
      IF viTe<>viT1
           DO coL_fondo
           STORE viTe TO viT1
           @mMF2,mMC2 Say Space(120) Font "&mLetRom",9 Style "BQ" Size 1,118
           DO CASE
                CASE viTe=01
                     @mMF2,mMC2+40 Say "ESCOGER PROVEEDOR REGISTRADO..."                                         Font "&mLetRom",9 Style "BQ"
                CASE viTe=02
                     @mMF2,mMC2+19 Say "LA FECHA DE ACTUALIZACIÓN ES AQUELLA DE LA LISTA DE PRECIOS..."          Font "&mLetRom",9 Style "BQ"
                CASE viTe=03
                     @mMF2,mMC2+12 Say "CAMPO DE 70 CARACTERES ALFANUMÉRICOS, SI NO SE USA PUEDE ESTAR VACÍO..." Font "&mLetRom",9 Style "BQ"
                CASE viTe=04
                     @mMF2,mMC2+12 Say "CAMPO DE 70 CARACTERES ALFANUMÉRICOS, SI NO SE USA PUEDE ESTAR VACÍO..." Font "&mLetRom",9 Style "BQ"
           ENDCASE
      ENDIF
      STORE k_Enter TO mkEy
      DO coLbln
      DO CASE
           CASE viTe=01 .AND. LEN(ALLTRIM(vpRv))<>0
                DO coL_fondo
                @mFI0+1,mCO0+13.5 Say  vNPR Font "&mLetAri",9 Style "NQ" Size 1,50 Pict "@S55"
                mkEy = INKEY(0, "HM")
                DO coL_beige
                @mFI0+1,mCO0+13.5 Say  vNPR Font "&mLetAri",9 Style "NQ" Size 1,50 Pict "@S55"
           CASE viTe=01
                @mFI0+1,mCO0+13.5 Edit vNPR Font "&mLetAri",9 Style "NQ" Size 1,50,70
                SET CURSOR ON
                READ
                SET CURSOR OFF
           OTHERWISE
                DO CASE
                     CASE viTe=02
                          @mFI0+1.0,mCO0+106.0 Get  vFEC Font "&mLetAri",9 Style "NQ" Size 1,12.2 Color ,&mColBlN
                     CASE viTe=03
                          @mFI0+4.5,mCO0+020.5 Edit vRF1 Font "&mLetAri",9 Style "NQ" Size 1,91,70
                     CASE viTe=04
                          @mFI0+6.0,mCO0+020.5 Edit vRF2 Font "&mLetAri",9 Style "NQ" Size 1,91,70
                ENDCASE
                SET CURSOR ON
                READ
                SET CURSOR OFF
      ENDCASE
 ENDDO
 DO deL_files
 RETURN
ENDPROC
*
PROCEDURE Ver_2105a
 DO CASE
      CASE viTe=1 .AND. LEN(ALLTRIM(vnPr))=0
           STORE "Nombre de Proveedor no puede estar vacío..." TO mmSj
      CASE viTe=1 .AND. LEN(ALLTRIM(vpRv))=0
           STORE "Proveedor debe estar registrado en el Maestro de Proveedores..."  ;
                 TO mmSj
      CASE viTe=2 .AND. AT(" ", DTOC(vfEc))<>0
           STORE "Fecha no puede tener espacios vacíos..." TO mmSj
      CASE viTe=2 .AND. (vpRv<>cpRv .OR. LEN(ALLTRIM(cpRv))=0 .OR. vfEc<> ;
           cfEc .OR. AT(" ", DTOC(cfEc))<>0)
           SELECT teMporal
           ZAP
           STORE 00 TO frEc, urEc
           STORE 01 TO vrEc, irEc
           SELECT caB_lista
           SEEK vpRv
           DO CASE
                CASE EOF()
                     STORE SPACE(70) TO vrF1, vrF2
                     STORE 01 TO vsW1, viOm
                CASE  .NOT. EOF()
                     SEEK vpRv+SUBSTR(DTOC(vfEc), 7, 4)+SUBSTR(DTOC(vfEc),  ;
                          4, 2)+SUBSTR(DTOC(vfEc), 1, 2)
                     IF EOF()
                          SET NEAR ON
                          SEEK vpRv+"ZZZZ"
                          SET NEAR OFF
                          IF EOF() .OR. f2105prv<>vpRv
                               IF EOF()
                                    GOTO BOTTOM
                               ELSE
                                    SKIP -1
                               ENDIF
                          ENDIF
                     ENDIF
                     SELECT caB_lista
                     STORE f2105cm1 TO vrF1
                     STORE f2105cm2 TO vrF2
                     STORE f2105tpo TO vsW1
                     STORE f2105fem TO xfEc
                     SELECT deT_lista
                     SEEK vpRv+SUBSTR(DTOC(xfEc), 7, 4)+SUBSTR(DTOC(xfEc),  ;
                          4, 2)+SUBSTR(DTOC(xfEc), 1, 2)
                     DO WHILE  .NOT. EOF() .AND. f2106prv=vpRv .AND.  ;
                        f2106fem=xfEc
                          STORE f2106cod TO vcOd
                          STORE f2106cdg TO vcD1
                          STORE f2106des TO vdEs
                          STORE f2106dcr TO vdCr
                          STORE f2106cuc TO vcUc
                          STORE f2106nuc TO vnUc
                          STORE f2106cux TO vcUx
                          STORE f2106nux TO vnUx
                          STORE f2106mon TO vmNd
                          STORE f2106sig TO vsIg
                          STORE f2106tca TO vtCa
                          STORE f2106fob TO vfOb
                          STORE f2106cfr TO vcFr
                          STORE f2106cif TO vcIf
                          STORE f2106pd1 TO vpD1
                          STORE f2106pd2 TO vpD2
                          STORE f2106pd3 TO vpD3
                          STORE f2106pd4 TO vpD4
                          STORE f2106pd5 TO vpD5
                          STORE f2106pd6 TO vpD6
                          STORE f2106pd7 TO vpD7
                          STORE f2106pd8 TO vpD8
                          STORE f2106fac TO vfCt
                          STORE f2106cm3 TO vcM3
                          STORE f2106fo1 TO vfO1
                          STORE f2106cf1 TO vcF1
                          STORE f2106ci1 TO vcI1
                          SELECT teMporal
                          APPEND BLANK
                          REPLACE ftM1cod WITH vcOd
                          REPLACE ftM1cdg WITH vcD1
                          REPLACE ftM1des WITH vdEs
                          REPLACE ftM1dcr WITH vdCr
                          REPLACE ftM1cuc WITH vcUc
                          REPLACE ftM1nuc WITH vnUc
                          REPLACE ftM1cux WITH vcUx
                          REPLACE ftM1nux WITH vnUx
                          REPLACE ftM1mon WITH vmNd
                          REPLACE ftM1sig WITH vsIg
                          REPLACE ftM1tca WITH vtCa
                          REPLACE ftM1fob WITH vfOb
                          REPLACE ftM1cfr WITH vcFr
                          REPLACE ftM1cif WITH vcIf
                          REPLACE ftM1pd1 WITH vpD1
                          REPLACE ftM1pd2 WITH vpD2
                          REPLACE ftM1pd3 WITH vpD3
                          REPLACE ftM1pd4 WITH vpD4
                          REPLACE ftM1pd5 WITH vpD5
                          REPLACE ftM1pd6 WITH vpD6
                          REPLACE ftM1pd7 WITH vpD7
                          REPLACE ftM1pd8 WITH vpD8
                          REPLACE ftM1fac WITH vfCt
                          REPLACE ftM1cm3 WITH vcM3
                          REPLACE ftM1fo1 WITH vfO1
                          REPLACE ftM1cf1 WITH vcF1
                          REPLACE ftM1ci1 WITH vcI1
                          STORE RECNO() TO frEc
                          SELECT deT_lista
                          SKIP
                     ENDDO
                     SELECT teMporal
                     GOTO TOP
                     STORE 2 TO viOm
           ENDCASE
           DO coLbln
           @mFI0+1,mCO0+106 Say vFEC Font "&mLetAri",9 Style "NQ" Size 1,12.2
           @mFI0+4.5,mCO0+20.5 Say vRF1 Font "&mLetAri",9 Style "NQ" Size 1,91 Pict "@S70"
           @mFI0+6.0,mCO0+20.5 Say vRF2 Font "&mLetAri",9 Style "NQ" Size 1,91 Pict "@S70"
           STORE vpRv TO cpRv
           STORE vfEc TO cfEc
           STORE ifIl TO vfIl, ufIl
           STORE 1 TO irEc, vrEc, viTe
           DO tpR_2105a
           DO tp1_2105a
           DO pa1_2105a
 ENDCASE
 IF LEN(ALLTRIM(mmSj))<>0
      DO poNmsj
      STORE 99 TO mkEy
 ENDIF
ENDPROC
*
PROCEDURE Det_2105a
 DO prEsiona WITH "4", "BOT_MA04", mmF1, mmC1
 IF mkEy=k_Esc
      RETURN
 ENDIF
 SET READBORDER OFF
 DO boT_2105a WITH "3"
 IF mkEy=k_Esc
      RETURN
 ENDIF
 DO q1_0000a
 DO p2_0000a
 DO paM2105b
 IF mkEy=k_Esc
      RETURN
 ENDIF
 DO q2_0000a
 DO p1_0000a
 SET READBORDER ON
 DO prEsiona WITH "4", "BOT_MA03", mmF1, mmC1
 IF mkEy=k_Esc
      RETURN
 ENDIF
 IF mkEy<>k_Clic .AND. mkEy<>k_Esc
      STORE 01 TO viTe
      STORE 00 TO viT1
 ENDIF
 IF mkEy=k_Tab
      DO grA_2105a
      STORE 99 TO mkEy
 ELSE
      IF vsW3=2
           STORE 1 TO vsW3
           DO p01_2105a WITH "1"
      ELSE
           DO boT_2105a WITH "1"
      ENDIF
      IF mkEy=k_Esc
           RETURN
      ENDIF
 ENDIF
 = INKEY(0.01)
ENDPROC
*
PROCEDURE Gra_2105a
 = INKEY(0.01)
 DO grAbar WITH "1"
 SELECT caB_lista
 SEEK vpRv+SUBSTR(DTOC(vfEc), 7, 4)+SUBSTR(DTOC(vfEc), 4, 2)+ ;
      SUBSTR(DTOC(vfEc), 1, 2)
 IF EOF()
      DO nuEvo_rg
      REPLACE f2105prv WITH vpRv
      REPLACE f2105fem WITH vfEc
 ELSE
      IF  .NOT. RLOCK()
           DO reG_lock WITH vpRv+SUBSTR(DTOC(vfEc), 7, 4)+ ;
              SUBSTR(DTOC(vfEc), 4, 2)+SUBSTR(DTOC(vfEc), 1, 2)
           IF mkEy=k_Esc
                WAIT CLEAR
                UNLOCK ALL
                = INKEY(0.01)
                RETURN
           ENDIF
      ELSE
           RLOCK()
      ENDIF
 ENDIF
 REPLACE f2105cm1 WITH vrF1
 REPLACE f2105cm2 WITH vrF2
 REPLACE f2105tpo WITH vsW1
 UNLOCK
 SELECT deT_lista
 SEEK vpRv+SUBSTR(DTOC(vfEc), 7, 4)+SUBSTR(DTOC(vfEc), 4, 2)+ ;
      SUBSTR(DTOC(vfEc), 1, 2)
 DO WHILE  .NOT. EOF() .AND. f2106prv=vpRv .AND. f2106fem=vfEc
      STORE f2106ite TO vrEc
      SEEK vpRv+SUBSTR(DTOC(vfEc), 7, 4)+SUBSTR(DTOC(vfEc), 4, 2)+ ;
           SUBSTR(DTOC(vfEc), 1, 2)+STR(vrEc, 4, 0)
      IF  .NOT. RLOCK()
           DO reG_lock WITH vpRv+SUBSTR(DTOC(vfEc), 7, 4)+ ;
              SUBSTR(DTOC(vfEc), 4, 2)+SUBSTR(DTOC(vfEc), 1, 2)+STR(vrEc, 4, 0)
           IF mkEy=k_Esc
                WAIT CLEAR
                UNLOCK ALL
                = INKEY(0.01)
                RETURN
           ENDIF
      ELSE
           RLOCK()
      ENDIF
      SKIP
 ENDDO
 DO WHILE .T.
      SEEK vpRv+SUBSTR(DTOC(vfEc), 7, 4)+SUBSTR(DTOC(vfEc), 4, 2)+ ;
           SUBSTR(DTOC(vfEc), 1, 2)
      IF EOF()
           EXIT
      ENDIF
      REPLACE f2106prv WITH SPACE(04)
      REPLACE f2106fem WITH CTOD("  /  /    ")
      REPLACE f2106ite WITH 0
      DELETE
      UNLOCK
 ENDDO
 SELECT teMporal
 SET ORDER TO FTM1COD
 GOTO TOP
 STORE 0 TO vrEc
 DO WHILE  .NOT. EOF()
      STORE ftM1cod TO vcOd
      STORE ftM1cdg TO vcD1
      STORE ftM1des TO vdEs
      STORE ftM1dcr TO vdCr
      STORE ftM1cuc TO vcUc
      STORE ftM1nuc TO vnUc
      STORE ftM1cux TO vcUx
      STORE ftM1nux TO vnUx
      STORE ftM1mon TO vmNd
      STORE ftM1sig TO vsIg
      STORE ftM1tca TO vtCa
      STORE ftM1fob TO vfOb
      STORE ftM1cfr TO vcFr
      STORE ftM1cif TO vcIf
      STORE ftM1pd1 TO vpD1
      STORE ftM1pd2 TO vpD2
      STORE ftM1pd3 TO vpD3
      STORE ftM1pd4 TO vpD4
      STORE ftM1pd5 TO vpD5
      STORE ftM1pd6 TO vpD6
      STORE ftM1pd7 TO vpD7
      STORE ftM1pd8 TO vpD8
      STORE ftM1fac TO vfCt
      STORE ftM1cm3 TO vcM3
      STORE ftM1fo1 TO vfO1
      STORE ftM1cf1 TO vcF1
      STORE ftM1ci1 TO vcI1
      SELECT deT_lista
      DO nuEvo_rg
      STORE vrEc+1 TO vrEc
      REPLACE f2106prv WITH vpRv
      REPLACE f2106fem WITH vfEc
      REPLACE f2106ite WITH vrEc
      REPLACE f2106cod WITH vcOd
      REPLACE f2106cdg WITH vcD1
      REPLACE f2106des WITH vdEs
      REPLACE f2106dcr WITH vdCr
      REPLACE f2106cuc WITH vcUc
      REPLACE f2106nuc WITH vnUc
      REPLACE f2106cux WITH vcUx
      REPLACE f2106nux WITH vnUx
      REPLACE f2106mon WITH vmNd
      REPLACE f2106sig WITH vsIg
      REPLACE f2106tca WITH vtCa
      REPLACE f2106fob WITH vfOb
      REPLACE f2106cfr WITH vcFr
      REPLACE f2106cif WITH vcIf
      REPLACE f2106pd1 WITH vpD1
      REPLACE f2106pd2 WITH vpD2
      REPLACE f2106pd3 WITH vpD3
      REPLACE f2106pd4 WITH vpD4
      REPLACE f2106pd5 WITH vpD5
      REPLACE f2106pd6 WITH vpD6
      REPLACE f2106pd7 WITH vpD7
      REPLACE f2106pd8 WITH vpD8
      REPLACE f2106fac WITH vfCt
      REPLACE f2106cm3 WITH vcM3
      REPLACE f2106fo1 WITH vfO1
      REPLACE f2106cf1 WITH vcF1
      REPLACE f2106ci1 WITH vcI1
      UNLOCK
      SELECT teMporal
      SKIP
 ENDDO
 SELECT teMporal
 SET ORDER TO
 ZAP
 UNLOCK ALL
 FLUSH
 = INKEY(0.01)
 WAIT CLEAR
 DO coLbln
 STORE DATE() TO vfEc
 STORE ifIl TO vfIl
 STORE 99 TO mkEy
 STORE SPACE(02) TO vsUc
 STORE SPACE(25) TO vdIs
 STORE SPACE(04) TO vpRv, cpRv
 STORE SPACE(70) TO vnPr, vdIr, vrF1, vrF2
 STORE 00 TO frEc, urEc, crEc, cfIl, viT1, vpD1, vpD2, vpD3, vpD4, vpD5,  ;
       vpD6, vpD7, vpD8, vfCt
 STORE 01 TO irEc, vrEc, viOm, viTe, vtIp, vsW0, vsW1, vsW2, vsW4
 IF vsW3=2
      STORE 1 TO vsW3
      DO p01_2105a WITH "1"
      IF mkEy=k_Esc
           RETURN
      ENDIF
 ENDIF
 @mFI0+1.0,mCO0+106.0 Say vFEC Font "&mLetAri",9 Style "NQ" Size 1,12.2
 @mFI0+4.5,mCO0+020.5 Say vRF1 Font "&mLetAri",9 Style "NQ" Size 1,91 Pict "@S70"
 @mFI0+6.0,mCO0+020.5 Say vRF2 Font "&mLetAri",9 Style "NQ" Size 1,91 Pict "@S70"
 DO prV_2105a WITH "2"
 DO tpR_2105a
 DO tp1_2105a
 DO pa1_2105a
 = INKEY(0.01)
 RELEASE ptX1, ptX2, poPc
ENDPROC
*
PROCEDURE Dir_2105a
 = INKEY(0.01)
 SELECT suCursal
 SET FILTER TO f2102cod=vpRv
 GOTO TOP
 IF BOF() .OR. EOF()
      STORE "Este Proveedor no tiene Sucursales..." TO mmSj
      STORE 99 TO mkEy
      DO poNmsj
      RETURN
 ENDIF
 DO prEsiona WITH "2", "CONSUL", vfB4, vcB4
 IF mkEy=k_Esc
      RETURN
 ENDIF
 DO q1_0000a
 STORE 99 TO mkEy
 SET CONFIRM ON
 ACTIVATE POPUP vtB2 REST
 SET CONFIRM OFF
 DO p1_0000a
 IF mkEy=k_Enter .AND. f2102suc<>vsUc
      STORE f2102suc TO vsUc
      STORE f2102dir TO vdIr
      STORE f2102dis TO vdIs
      DO prV_2105a WITH "1"
 ENDIF
 DO prEsiona WITH "1", "CONSUL", vfB4, vcB4
 IF mkEy=k_Esc
      RETURN
 ENDIF
 STORE 99 TO mkEy
ENDPROC
*
PROCEDURE Lin_2105a
 PARAMETER piNi, pfIn
 DO coLsc3
 DO CASE
      CASE vsW2<4
           @ piNi, mcO0+04.8 TO pfIn, mcO0+04.8
           @ piNi, mcO0+23.7 TO pfIn, mcO0+23.7
           IF vsW2=1
                @ piNi, mcO0+42.7 TO pfIn, mcO0+42.7
           ENDIF
           @ piNi, mcO0+123.8 TO pfIn, mcO0+123.8
           @ piNi, mcO0+142.4 TO pfIn, mcO0+142.4
           @ piNi, mcO0+150.6 TO pfIn, mcO0+150.6
           @ piNi, mcO0+171.4 TO pfIn, mcO0+171.4
      CASE vsW2=4
           @ piNi, mcO0+004.8 TO pfIn, mcO0+004.8
           @ piNi, mcO0+023.7 TO pfIn, mcO0+023.7
           @ piNi, mcO0+093.8 TO pfIn, mcO0+093.8
           @ piNi, mcO0+102.4 TO pfIn, mcO0+102.4
           @ piNi, mcO0+110.5 TO pfIn, mcO0+110.5
           @ piNi, mcO0+131.4 TO pfIn, mcO0+131.4
           @ piNi, mcO0+142.4 TO pfIn, mcO0+142.4
           @ piNi, mcO0+153.3 TO pfIn, mcO0+153.3
           @ piNi, mcO0+168.9 TO pfIn, mcO0+168.9
 ENDCASE
 @ piNi, ucLn-4.7 TO pfIn, ucLn-4.7
ENDPROC
*
PROCEDURE Prv_2105a
 PARAMETER ptPo
 DO CASE
      CASE ptPo="1"
           DO coL_beige
      CASE ptPo$"23"
           DO coLbln
 ENDCASE
 DO CASE
      CASE ptPo$"12"
           @mFI0+1,mCO0+13.5 Say  vNPR Font "&mLetAri",9 Style "NQ" Size 1,50 Pict "@S70"
      CASE ptPo="3"
           @mFI0+1,mCO0+13.5 Edit vNPR Font "&mLetAri",9 Style "NQ" Size 1,50,70
 ENDCASE
 DO coL_beige
 DO CASE
      CASE ptPo$"12"
           @mFI0+2.5,mCO0+13.5 Say vDIR Font "&mLetAri",9 Style "NQ" Size 1,50 Pict "@S70"
           @mFI0+2.5,mCO0+97.0 Say vDIS Font "&mLetAri",9 Style "NQ" Size 1,25 Pict "@S25"
      CASE ptPo="3"
           @mFI0+2.5,mCO0+13.5 Edit vDIR Font "&mLetAri",9 Style "NQ" Size 1,50,70
           @mFI0+2.5,mCO0+97.0 Edit vDIS Font "&mLetAri",9 Style "NQ" Size 1,25,25
 ENDCASE
ENDPROC
*
PROCEDURE Tpr_2105a
 DO CASE
      CASE vtIp=1
           STORE mfI0+4.5 TO vfB6
           STORE mcO0+125 TO vcB6
      CASE vtIp=2
           STORE mfI0+5.0 TO vfB6
           STORE mcO0+116 TO vcB6
 ENDCASE
 DO coL_fondo
 DO CASE
      CASE vtIp=1
           @ vfB6-0.4, vcB6-9 CLEAR TO vfB6+3.1, vcB6+22
           @vFB6,vCB6 Get vSW1 Font "&mLetRom",12 Style "NQ" Function "*RVT sin IGV;con IGV" Default vSW1
           DO coL_beige
           IF vsW3=1
                @mFI0+2.5,mCO0+79 Say "Ciudad/Distrito" Font "&mLetAri",9 Style "NQ" Size 1,17
           ENDIF
      CASE vtIp=2
           @ vfB6-0.9, vcB6 CLEAR TO vfB6+2.6, vcB6+31
           @vFB6,vCB6 Get vSW1 Font "&mLetRom",12 Style "NQ" Function "*RHT FOB;CFR;CIF" Default vSW1
           DO coL_beige
           IF vsW3=1
                @mFI0+2.5,mCO0+79 Say "Ciudad/Pais" Font "&mLetAri",9 Style "NQ" Size 1,17
           ENDIF
 ENDCASE
 READ TIMEOUT 0.01
ENDPROC
*
PROCEDURE Tp1_2105a
 DO coLsc3
 @ ifIl-1.4, icLn+24.4 CLEAR TO ifIl-0.25, ucLn-4.6
 DO CASE
      CASE vtIp=1 .AND. vsW1=1 .AND. vsW2<4
           @iFIL-1.4,mCO0+151.8 Say "Precio Unit.s/IGV" Font "&mLetAri",9 Style "NQ"
      CASE vtIp=1 .AND. vsW1=2 .AND. vsW2<4
           @iFIL-1.4,mCO0+151.8 Say "Precio Unit.c/IGV" Font "&mLetAri",9 Style "NQ"
      CASE vtIp=1 .AND. vsW1=1 .AND. vsW2=4
           @iFIL-1.4,mCO0+111.8 Say "Precio Unit.s/IGV" Font "&mLetAri",9 Style "NQ"
      CASE vtIp=1 .AND. vsW1=2 .AND. vsW2=4
           @iFIL-1.4,mCO0+111.8 Say "Precio Unit.c/IGV" Font "&mLetAri",9 Style "NQ"
      CASE vtIp=2 .AND. vsW1=1 .AND. vsW2<4
           @iFIL-1.4,mCO0+161.3 Say "FOB"               Font "&mLetAri",9 Style "NQ"
      CASE vtIp=2 .AND. vsW1=2 .AND. vsW2<4
           @iFIL-1.4,mCO0+161.3 Say "CFR"               Font "&mLetAri",9 Style "NQ"
      CASE vtIp=2 .AND. vsW1=3 .AND. vsW2<4
           @iFIL-1.4,mCO0+161.3 Say "CIF"               Font "&mLetAri",9 Style "NQ"
      CASE vtIp=2 .AND. vsW1=1 .AND. vsW2=4
           @iFIL-1.4,mCO0+119.5 Say "FOB"               Font "&mLetAri",9 Style "NQ"
      CASE vtIp=2 .AND. vsW1=2 .AND. vsW2=4
           @iFIL-1.4,mCO0+119.5 Say "CFR"               Font "&mLetAri",9 Style "NQ"
      CASE vtIp=2 .AND. vsW1=3 .AND. vsW2=4
           @iFIL-1.4,mCO0+119.5 Say "CIF"               Font "&mLetAri",9 Style "NQ"
 ENDCASE
 DO CASE
      CASE vsW2=1
           @iFIL-1.4,mCO0+024.4 Say "Código-Proveed"            Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+043.4 Say "Descripción del Proveedor" Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+124.4 Say "Unidad-Compra"             Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+143.0 Say "Moned"                     Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+175.9 Say "Stock"                     Font "&mLetAri",9 Style "NQ"
      CASE vsW2=2
           @iFIL-1.4,mCO0+024.4 Say "Descripción"               Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+124.4 Say "Unidad-Invent"             Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+143.0 Say "Moned"                     Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+175.9 Say "Stock"                     Font "&mLetAri",9 Style "NQ"
      CASE vsW2=3
           @iFIL-1.4,mCO0+024.4 Say "Comentario"                Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+124.4 Say "Unidad-Invent"             Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+143.0 Say "Moned"                     Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+175.9 Say "Stock"                     Font "&mLetAri",9 Style "NQ"
      CASE vsW2=4
           @iFIL-1.4,mCO0+024.4 Say "Descripción"               Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+094.3 Say "Uni.Inv"                   Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+103.0 Say "Moned"                     Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+156.5 Say "Factor"                    Font "&mLetAri",9 Style "NQ"
           @iFIL-1.4,mCO0+172.2 Say "Costo Final"               Font "&mLetAri",9 Style "NQ"
           DO CASE
                CASE vsW4=1
                     @iFIL-1.4,mCO0+132.2 Say "%Dcto.1"           Font "&mLetAri",9 Style "NQ"
                     @iFIL-1.4,mCO0+143.1 Say "%Dcto.2"           Font "&mLetAri",9 Style "NQ"
                CASE vsW4=2
                     @iFIL-1.4,mCO0+132.2 Say "%Dcto.3"           Font "&mLetAri",9 Style "NQ"
                     @iFIL-1.4,mCO0+143.1 Say "%Dcto.4"           Font "&mLetAri",9 Style "NQ"
                CASE vsW4=3
                     @iFIL-1.4,mCO0+132.2 Say "%Dcto.5"           Font "&mLetAri",9 Style "NQ"
                     @iFIL-1.4,mCO0+143.1 Say "%Dcto.6"           Font "&mLetAri",9 Style "NQ"
                CASE vsW4=4
                     @iFIL-1.4,mCO0+132.2 Say "%Dcto.7"           Font "&mLetAri",9 Style "NQ"
                     @iFIL-1.4,mCO0+143.1 Say "%Dcto.8"           Font "&mLetAri",9 Style "NQ"
           ENDCASE
 ENDCASE
ENDPROC
*
PROCEDURE Pa1_2105a
 PRIVATE pcOd, ppRe, ppR1, prEc
 DO coL_fondo
 SELECT teMporal
 GOTO TOP
 STORE ifIl TO cfIl
 IF BOF()
      @ cfIl-0.2, icLn CLEAR TO ffIl+1.3, ucLn
 ELSE
      @ cfIl-0.2, icLn CLEAR TO cfIl, ucLn
      GOTO irEc
      DO WHILE  .NOT. EOF() .AND. cfIl<ffIl+1
           STORE ftM1cod TO pcOd
           STORE RECNO() TO prEc
           SELECT prOductos
           SEEK ALLTRIM(pcOd)+"*"
           IF EOF()
                STORE 0 TO psTo
           ELSE
                STORE f2111sto TO psTo
           ENDIF
           SELECT teMporal
           DO CASE
                CASE vsW1=1
                     STORE ftM1fob TO ppRe
                     STORE ftM1fo1 TO ppR1
                CASE vsW1=2
                     STORE ftM1cfr TO ppRe
                     STORE ftM1cf1 TO ppR1
                CASE vsW1=3
                     STORE ftM1cif TO ppRe
                     STORE ftM1cif TO ppR1
           ENDCASE
           @ cfIl, icLn CLEAR TO cfIl+1, ucLn
           DO liN_2105a WITH cfIl-0.2, cfIl+1
           DO coL_fondo
           @cFIL,mCO0+0.1 Say pREC    Font "&mLetAri",9 Style "NQ" Size 1,04.1 Pict "999"
           @cFIL,mCO0+5.4 Say FTM1COD Font "&mLetAri",9 Style "NQ" Size 1,18.0 Pict "@S20"
           IF vsW2<4
                @cFIL,mCO0+143.0 Say FTM1SIG Font "&mLetAri",9 Style "NQ" Size 1,07.2 Pict "@S10"
                @cFIL,mCO0+151.1 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.2
                @cFIL,mCO0+151.3 Say pPRE    Font "&mLetAri",9 Style "NQ" Size 1,19.1 Pict "999,999.999999"
                @cFIL,mCO0+170.5 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.4
                @cFIL,mCO0+171.9 Say pSTO    Font "&mLetAri",9 Style "NQ" Size 1,16.7 Pict "999,999.9999"
           ENDIF
           DO CASE
                CASE vsW2=1
                     @cFIL,mCO0+024.4 Say FTM1CDG Font "&mLetAri",9 Style "NQ" Size 1,18.0 Pict "@S20"
                     @cFIL,mCO0+043.4 Say FTM1DCR Font "&mLetAri",9 Style "NQ" Size 1,80.0 Pict "@S80"
                     @cFIL,mCO0+124.4 Say FTM1NUX Font "&mLetAri",9 Style "NQ" Size 1,17.5 Pict "@S20"
                CASE vsW2=2
                     @cFIL,mCO0+024.4 Say FTM1DES Font "&mLetAri",9 Style "NQ" Size 1,98.9 Pict "@S101"
                     @cFIL,mCO0+124.4 Say FTM1NUC Font "&mLetAri",9 Style "NQ" Size 1,17.5 Pict "@S20"
                CASE vsW2=3
                     @cFIL,mCO0+024.4 Say FTM1CM3 Font "&mLetAri",9 Style "NQ" Size 1,98.9 Pict "@S100"
                     @cFIL,mCO0+124.4 Say FTM1NUC Font "&mLetAri",9 Style "NQ" Size 1,17.5 Pict "@S20"
                CASE vsW2=4
                     @cFIL,mCO0+024.4 Say FTM1DES Font "&mLetAri",9 Style "NQ" Size 1,69.0 Pict "@S72"
                     @cFIL,mCO0+094.3 Say FTM1NUC Font "&mLetAri",9 Style "NQ" Size 1,07.5 Pict "@S10"
                     @cFIL,mCO0+103.0 Say FTM1SIG Font "&mLetAri",9 Style "NQ" Size 1,07.2 Pict "@S10"
                     @cFIL,mCO0+111.4 Say pPRE    Font "&mLetAri",9 Style "NQ" Size 1,19.1 Pict "999,999.999999"
                     @cFIL,mCO0+154.2 Say FTM1FAC Font "&mLetAri",9 Style "NQ" Size 1,14.0 Pict "999.999999"
                     @cFIL,mCO0+169.5 Say pPR1    Font "&mLetAri",9 Style "NQ" Size 1,19.5 Pict "999,999.999999"
                     @cFIL,mCO0+111.2 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.2
                     @cFIL,mCO0+130.5 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.4
                     @cFIL,mCO0+132.0 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.2
                     DO CASE
                          CASE vsW4=1
                               @cFIL,mCO0+132.2 Say FTM1PD1 Font "&mLetAri",9 Style "NQ" Size 1,09.4 Pict "999.999"
                               @cFIL,mCO0+143.1 Say FTM1PD2 Font "&mLetAri",9 Style "NQ" Size 1,09.4 Pict "999.999"
                          CASE vsW4=2
                               @cFIL,mCO0+132.2 Say FTM1PD3 Font "&mLetAri",9 Style "NQ" Size 1,09.4 Pict "999.999"
                               @cFIL,mCO0+143.1 Say FTM1PD4 Font "&mLetAri",9 Style "NQ" Size 1,09.4 Pict "999.999"
                          CASE vsW4=3
                               @cFIL,mCO0+132.2 Say FTM1PD5 Font "&mLetAri",9 Style "NQ" Size 1,09.4 Pict "999.999"
                               @cFIL,mCO0+143.1 Say FTM1PD6 Font "&mLetAri",9 Style "NQ" Size 1,09.4 Pict "999.999"
                          CASE vsW4=4
                               @cFIL,mCO0+132.2 Say FTM1PD7 Font "&mLetAri",9 Style "NQ" Size 1,09.4 Pict "999.999"
                               @cFIL,mCO0+143.1 Say FTM1PD8 Font "&mLetAri",9 Style "NQ" Size 1,09.4 Pict "999.999"
                     ENDCASE
                     @cFIL,mCO0+111.2 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.2
                     @cFIL,mCO0+130.5 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.4
                     @cFIL,mCO0+132.0 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.2
                     @cFIL,mCO0+141.6 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.3
                     @cFIL,mCO0+142.9 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.2
                     @cFIL,mCO0+152.5 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.3
                     @cFIL,mCO0+154.0 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.2
                     @cFIL,mCO0+168.2 Say " "     Font "&mLetAri",9 Style "NQ" Size 1,00.3
           ENDCASE
           DO prEsiona WITH "1", "DESCAN", cfIl, ucLn-3.9
           IF mkEy=k_Esc
                RETURN
           ENDIF
           STORE cfIl TO ufIl
           STORE RECNO() TO urEc
           STORE cfIl+1 TO cfIl
           SKIP
      ENDDO
      DO coL_fondo
      @ cfIl, icLn CLEAR TO ffIl+1.3, ucLn
 ENDIF
 DO liN_2105a WITH ifIl-1.5, ffIl+1.3
ENDPROC
*
PROCEDURE Bot_2105a
 PARAMETER ptPo
 DO prEsiona WITH ptPo, "CONSUL", vfB1, vcB1
 IF mkEy=k_Esc
      RETURN
 ENDIF
 DO prEsiona WITH ptPo, "BUSCAR", vfB2, vcB2
 IF mkEy=k_Esc
      RETURN
 ENDIF
 IF LEN(ALLTRIM(vpRv))=0 .OR. ptPo="3"
      DO prEsiona WITH "3", "DESCAR", vfB3, vcB3
 ELSE
      DO prEsiona WITH "1", "DESCAR", vfB3, vcB3
 ENDIF
 IF mkEy=k_Esc
      RETURN
 ENDIF
 IF LEN(ALLTRIM(vpRv))=0 .OR. ptPo="3"
      DO prEsiona WITH "3", "CONSUL", vfB4, vcB4
 ELSE
      DO prEsiona WITH "1", "CONSUL", vfB4, vcB4
 ENDIF
 IF mkEy=k_Esc
      RETURN
 ENDIF
 DO prEsiona WITH ptPo, "CONSUL", vfB5, vcB5
 IF mkEy=k_Esc
      RETURN
 ENDIF
ENDPROC
*
PROCEDURE P00_2105a
 PARAMETER ptPo
 DO ptA_0000a
 IF mkEy=k_Esc
      RETURN
 ENDIF
 STORE irEc TO vrEc
 STORE 00 TO viT1
 STORE 43 TO muFi
 STORE 194 TO muCo
 STORE (mwCo-muCo)/2 TO mmC2
 STORE (mwCo-166)/2 TO vcL0
 STORE (mwFi-muFi)/2 TO mfI0
 STORE (mwCo-muCo)/2 TO mcO0
 STORE mfI0+03.4 TO ifFs, ufFs, vfFs
 STORE ifFs+40.0 TO ffFs
 STORE mfI0+03.7 TO ifFr, ufFr, vfFr
 STORE ifFr+36 TO ffFr
 STORE mfI0+02.7 TO ifFt, ufFt, vfFt
 STORE ifFt+17 TO ffFt
 STORE mfI0+03.7 TO ifFu, ufFu, vfFu
 STORE ifFu+16 TO ffFu
 STORE mfI0+04.7 TO ifFv, ufFv, vfFv
 STORE ifFv+15 TO ffFv
 STORE mfI0+05.7 TO ifFw, ufFw, vfFw
 STORE ifFw+14 TO ffFw
 STORE mfI0+06.7 TO ifFx, ufFx, vfFx
 STORE ifFx+13 TO ffFx
 STORE mfI0+muFi TO mmF2
 STORE mfI0+00.9 TO vfB1, vfB2, vfB3, vfB5
 STORE mfI0+02.5 TO vfB4
 STORE mcO0+68 TO vcB2
 STORE mcO0+72 TO vcB3
 STORE mcO0+119 TO vcB5
 STORE mcO0+64 TO vcB1, vcB4
 STORE mcO0 TO icLn
 STORE mcO0+muCo TO ucLn
 STORE mcO0+74 TO vcB7
 DO p01_2105a WITH ptPo
ENDPROC
*
PROCEDURE P01_2105a
 PARAMETER ptPo
 DO ptA_0000a
 IF mkEy=k_Esc
      RETURN
 ENDIF
 STORE mfI0+10 TO ifIl, ufIl, vfIl
 STORE ifIl+25 TO ffIl
 IF vsW3=2
      STORE ifIl-8 TO ifIl
 ENDIF
 Define Popup vTB1 from mFI0+2.2,mCO0+0.9 to fFIL+7,mCO0+75.4 Font "&mLetCou",11 Style "NQ" Prompt Field F2101NOM Scroll Color Scheme 3 Footer "CONSULTA DE PROVEEDORES"
 Define Popup vTB2 from mFI0+3.8,mCO0+0.9 to fFIL+7,mCO0+67.4 Font "&mLetCou",11 Style "NQ" Prompt Field AllTrim(F2102DIR)+", "+AllTrim(F2102DIS) Scroll Color Scheme 3 Footer "SUCURSALES"
 Define Popup vTB3 from iFIL-2,mCO0+71 to fFIL+7,uCLN Font "&mLetCou",11 Style "NQ" Prompt Field Substr(F9213DES,1,28)+" - "+F9213UNI Scroll Color Scheme 3 Footer "CONSULTA DE UNIDADES"
 Define Popup vTB4 from iFIL-2,mCO0+79 to fFIL+7,uCLN Font "&mLetCou",11 Style "NQ" Prompt Field Substr(F9226SIG,1,21)+" - "+F9226COD Scroll Color Scheme 3 Footer "CONSULTA DE MONEDAS"
 ON SELECTION POPUP vtB1 DO TB1_0000A
 ON SELECTION POPUP vtB2 DO TB2_0000A
 ON SELECTION POPUP vtB3 DO TB3_0000A
 ON SELECTION POPUP vtB4 DO TB4_0000A
 DO tiT_0000a WITH "Lista de Precios de Proveedores"
 DO coL_boton
 @ mmF1, 0 CLEAR TO mmF1+3.1, mwCo
 DO coL_fondo
 DO cuAdro WITH mmF2, icLn, mmF2+0.9, ucLn
 IF mkEy=k_Esc
      RETURN
 ENDIF
 DO cuAdro WITH ifIl-1.5, icLn, ffIl+6.8, ucLn
 IF mkEy=k_Esc
      RETURN
 ENDIF
 IF vsW3=1
      DO cuAdro WITH mfI0+0.3, icLn, mfI0+7.5, ucLn
      IF mkEy=k_Esc
           RETURN
      ENDIF
      DO coL_beige
      @ mfI0+0.4, icLn+0.1 TO mfI0+4, ucLn-0.3 PATTERN 1
      @ mfI0+0.4, icLn+0.1 TO mfI0+0.4, ucLn-0.3 COLOR RGB(128,128,128,0,0,0)
      @ mfI0+0.4, icLn+0.1 TO mfI0+4.0, ucLn+0.1 COLOR RGB(128,128,128,0,0,0)
      @mFI0+1.1,mCO0+01.1 Say "Proveedor"              Font "&mLetAri",9 Style "BQ"
      @mFI0+1.0,mCO0+79.0 Say "Fecha de Actualización" Font "&mLetAri",9 Style "BQ"
      @mFI0+2.5,mCO0+01.1 Say "Dirección"              Font "&mLetAri",9 Style "NQ"
      @mFI0+4.5,mCO0+01.1 Say "Observaciones"          Font "&mLetAri",9 Style "NT"
 ENDIF
 IF vsW3=1
      DO coLbln
      @mFI0+1.0,mCO0+106.0 Get  vFEC Font "&mLetAri",9 Style "NQ" Size 1,12.2 Color ,&mColBlN
      @mFI0+4.5,mCO0+020.5 Edit vRF1 Font "&mLetAri",9 Style "NQ" Size 1,91,70
      @mFI0+6.0,mCO0+020.5 Edit vRF2 Font "&mLetAri",9 Style "NQ" Size 1,91,70
      DO prV_2105a WITH "3"
      DO boT_2105a WITH "1"
      IF mkEy=k_Esc
           RETURN
      ENDIF
      DO prEsiona WITH "4", "BOT_MA03", mmF1, mmC1
      IF mkEy=k_Esc
           RETURN
      ENDIF
 ENDIF
 DO coLsc3
 @ ifIl-1.5, icLn-00.5 TO ifIl-0.20, ucLn PATTERN 1
 @ ffIl+1.3, icLn-00.5 TO ffIl+6.75, ucLn PATTERN 1
 @iFIL-1.4,mCO0+00.2 Say "Ítem"                       Font "&mLetAri",9 Style "NQ"
 @iFIL-1.4,mCO0+05.9 Say "Código Interno"             Font "&mLetAri",9 Style "NQ"
 @fFIL+1.9,mCO0+01.0 Say "Descripción del Sistema:"   Font "&mLetAri",9 Style "BT"
 @fFIL+3.6,mCO0+01.0 Say "Descripción del Proveedor:" Font "&mLetAri",9 Style "BT"
 @fFIL+5.1,mCO0+01.0 Say "Comentario del Item:"       Font "&mLetAri",9 Style "BT"
 @fFIL+1.9,mCO0+32.5 Edit vDES                        Font "&mLetAri",9 Style "NQ" Size 1,91,120
 @fFIL+3.6,mCO0+32.5 Edit vDCR                        Font "&mLetAri",9 Style "NQ" Size 1,91,80
 @fFIL+5.1,mCO0+32.5 Edit vCM3                        Font "&mLetAri",9 Style "NQ" Size 1,91,70
 READ TIMEOUT 0.01
 DO tpR_2105a
 DO tp1_2105a
 DO pa1_2105a
 DO prEsiona WITH "1", "ABREI", ifIl-2.5, vcB7
 IF mkEy=k_Esc
      RETURN
 ENDIF
 DO prEsiona WITH "1", "CONSU5", ifIl-2.3, vcB7+2.2
 IF mkEy=k_Esc
      RETURN
 ENDIF
 DO prEsiona WITH "1", "ABRED", ifIl-2.5, vcB7+3.5
 IF mkEy=k_Esc
      RETURN
 ENDIF
ENDPROC
*
PROCEDURE Clp_2105a
 = INKEY(0.01)
 DO CASE
      CASE mfIl>=mmF1 .AND. mfIl<=mmF1+03.11 .AND. mcCc>=mmC1+59.6 .AND.  ;
           mcCc<=mmC1+68
           STORE k_Tab TO mkEy
      CASE mfIl>=mmF1 .AND. mfIl<=mmF1+03.11 .AND. mcCc>=mmC1+68 .AND.  ;
           mcCc<=mmC1+77
           STORE k_F1 TO mkEy
      CASE mfIl>=mmF1 .AND. mfIl<=mmF1+03.11 .AND. mcCc>=mmC1+77 .AND.  ;
           mcCc<=mmC1+85.8
           STORE k_Esc TO mkEy
      CASE mfIl>=mmF1 .AND. mfIl<=mmF1+03.11 .AND. mcCc>=mmC1+85.8 .AND.  ;
           mcCc<=mmC1+95
           STORE k_F10 TO mkEy
      CASE mfIl>=vfB1+mfI1 .AND. mfIl<=vfB1+mfI2 .AND. mcCc>=vcB1+mcO1  ;
           .AND. mcCc<=vcB1+mcO2
           STORE 01 TO viTe
           STORE k_F2 TO mkEy
      CASE mfIl>=vfB2+mfI1 .AND. mfIl<=vfB2+mfI2 .AND. mcCc>=vcB2+mcO1  ;
           .AND. mcCc<=vcB2+mcO2
           STORE 01 TO viTe
           STORE k_F3 TO mkEy
      CASE mfIl>=vfB3+mfI1 .AND. mfIl<=vfB3+mfI2 .AND. mcCc>=vcB3+mcO1  ;
           .AND. mcCc<=vcB3+mcO2
           STORE 01 TO viTe
           STORE k_Ctrl_del TO mkEy
      CASE mfIl>=vfB4+mfI1 .AND. mfIl<=vfB4+mfI2 .AND. mcCc>=vcB4+mcO1  ;
           .AND. mcCc<=vcB4+mcO2
           STORE k_F5 TO mkEy
      CASE mfIl>=vfB5+mfI1 .AND. mfIl<=vfB5+mfI2 .AND. mcCc>=vcB5+mcO1  ;
           .AND. mcCc<=vcB5+mcO2
           STORE 01 TO viTe
           STORE k_F4 TO mkEy
      CASE mfIl>=vfB6+0.036 .AND. mfIl<=vfB6+1.25 .AND. vtIp=1 .AND. mcCc>= ;
           vcB6+0.2 .AND. mcCc<=vcB6+14 .AND. vsW1<>1
           STORE 1 TO vsW1
           DO tpR_2105a
           DO tp1_2105a
           DO pa1_2105a
           STORE 99 TO mkEy
      CASE mfIl>=vfB6+1.25 .AND. mfIl<=vfB6+2.678 .AND. vtIp=1 .AND. mcCc>= ;
           vcB6+0.2 .AND. mcCc<=vcB6+14 .AND. vsW1<>2
           STORE 2 TO vsW1
           DO tpR_2105a
           DO tp1_2105a
           DO pa1_2105a
           STORE 99 TO mkEy
      CASE mfIl>=vfB6-0.106 .AND. mfIl<=vfB6+1.32 .AND. vtIp=2 .AND. mcCc>= ;
           vcB6-0.6 .AND. mcCc<=vcB6+10 .AND. vsW1<>1
           STORE 1 TO vsW1
           DO tpR_2105a
           DO tp1_2105a
           DO pa1_2105a
           STORE 99 TO mkEy
      CASE mfIl>=vfB6-0.106 .AND. mfIl<=vfB6+1.32 .AND. vtIp=2 .AND. mcCc>= ;
           vcB6+10 .AND. mcCc<=vcB6+21 .AND. vsW1<>2
           STORE 2 TO vsW1
           DO tpR_2105a
           DO tp1_2105a
           DO pa1_2105a
           STORE 99 TO mkEy
      CASE mfIl>=vfB6-0.106 .AND. mfIl<=vfB6+1.32 .AND. vtIp=2 .AND. mcCc>= ;
           vcB6+21 .AND. mcCc<=vcB6+30.8 .AND. vsW1<>3
           STORE 3 TO vsW1
           DO tpR_2105a
           DO tp1_2105a
           DO pa1_2105a
           STORE 99 TO mkEy
      CASE mfIl>=ifIl-2.535 .AND. mfIl<=ifIl-1.606 .AND. mcCc>=vcB7 .AND.  ;
           mcCc<=vcB7+2
           IF vsW2=1
                STORE 4 TO vsW2
           ELSE
                STORE vsW2-1 TO vsW2
           ENDIF
           DO tp1_2105a
           DO pa1_2105a
           STORE 99 TO mkEy
      CASE mfIl>=ifIl-2.535 .AND. mfIl<=ifIl-1.606 .AND. mcCc>=vcB7+3.6  ;
           .AND. mcCc<=vcB7+5.8
           IF vsW2=4
                STORE 1 TO vsW2
           ELSE
                STORE vsW2+1 TO vsW2
           ENDIF
           DO tp1_2105a
           DO pa1_2105a
           STORE 99 TO mkEy
      CASE mfIl>=mfI0+0.964 .AND. mfIl<=mfI0+2.107 .AND. mcCc>=mcO0+0.8  ;
           .AND. mcCc<=mcO0+63.8 .AND. viTe<>01
           STORE 01 TO viTe
           STORE 99 TO mkEy
      CASE mfIl>=mfI0+0.821 .AND. mfIl<=mfI0+2.107 .AND. mcCc>=mcO0+79.2  ;
           .AND. mcCc<=mcO0+122.8 .AND. viTe<>02
           STORE 2 TO ciTx
           DO WHILE viTe<ciTx .AND. mkEy<>99
                DO veR_2105a
                IF mkEy<>99
                     STORE viTe+1 TO viTe
                ENDIF
           ENDDO
           IF mkEy<>99
                STORE ciTx TO viTe
           ENDIF
           STORE 99 TO mkEy
      CASE mfIl>=mfI0+4.393 .AND. mfIl<=mfI0+5.607 .AND. mcCc>=mcO0+1  ;
           .AND. mcCc<=mcO0+111.8 .AND. viTe<>03
           STORE 3 TO ciTx
           DO WHILE viTe<ciTx .AND. mkEy<>99
                DO veR_2105a
                IF mkEy<>99
                     STORE viTe+1 TO viTe
                ENDIF
           ENDDO
           IF mkEy<>99
                STORE ciTx TO viTe
           ENDIF
           STORE 99 TO mkEy
      CASE mfIl>=mfI0+5.821 .AND. mfIl<=mfI0+7.107 .AND. mcCc>=mcO0+1  ;
           .AND. mcCc<=mcO0+111.8 .AND. viTe<>04
           STORE 4 TO ciTx
           DO WHILE viTe<ciTx .AND. mkEy<>99
                DO veR_2105a
                IF mkEy<>99
                     STORE viTe+1 TO viTe
                ENDIF
           ENDDO
           IF mkEy<>99
                STORE ciTx TO viTe
           ENDIF
           STORE 99 TO mkEy
      OTHERWISE
           STORE 99 TO mkEy
 ENDCASE
ENDPROC
*
PROCEDURE Hl1_2105a
 PRIVATE pfIl
 = INKEY(0.01)
 ACTIVATE WINDOW mpAn_hlp
 STORE 0.2 TO pfIl
 @ pfIl+00, 02 SAY  ;
   "En este programa, se ingresaran los productos del proveedor con sus"
 @ pfIl+01, 02 SAY  ;
   "costos y unidades; si estos, ya están ingresados en la lista de precios"
 @ pfIl+02, 02 SAY  ;
   "de la empresa se debe llamar al producto, caso contrario se deja el có-"
 @ pfIl+03, 02 SAY "digo interno vacio."
 @ pfIl+04, 02 SAY  ;
   "La Fecha de Actualización es sumamente importante ya que se guarda"
 @ pfIl+05, 02 SAY  ;
   "un Histórico por Lista. Es IMPORTANTE saber que la última lista en gra-"
 @ pfIl+06, 02 SAY "bar se es la que esta vigente."
 @ pfIl+08, 02 SAY "Las teclas para movilizarse son:"
 @ pfIl+10, 19 SAY ":" STYLE "BT"
 @ pfIl+11, 19 SAY ":" STYLE "BT"
 @ pfIl+12, 19 SAY ":" STYLE "BT"
 @ pfIl+10, 01 SAY "F10" STYLE "BT"
 @ pfIl+11, 01 SAY "ESC" STYLE "BT"
 @ pfIl+12, 01 SAY "F1" STYLE "BT"
 @ pfIl+10, 21 SAY "Cerrar y regresar a Windows"
 @ pfIl+12, 21 SAY "Ayuda del Programa"
 DO CASE
      CASE viTe=1
           @ pfIl+11, 21 SAY "Regresar al Menú Principal"
      OTHERWISE
           @ pfIl+11, 21 SAY "Regresar al primer campo"
 ENDCASE
 STORE pfIl+13 TO pfIl
 IF viTe<3
      @ pfIl, 19 SAY ":" STYLE "BT"
      @ pfIl, 01 SAY "F2" STYLE "BT"
      DO CASE
           CASE viTe=01
                @ pfIl, 21 SAY "Consulta de Proveedores registrados"
           CASE viTe=02
                @ pfIl, 21 SAY "Consultar Fechas de Actualización"
      ENDCASE
      STORE pfIl+1 TO pfIl
 ENDIF
 IF viTe=1
      @ pfIl, 19 SAY ":" STYLE "BT"
      @ pfIl, 01 SAY "F3" STYLE "BT"
      @ pfIl, 21 SAY "Buscar palabra o frase y mostrarla en consulta"
      STORE pfIl+1 TO pfIl
 ENDIF
 IF viTe<3
      @ pfIl, 19 SAY ":" STYLE "BT"
      @ pfIl, 01 SAY "F4" STYLE "BT"
      @ pfIl, 21 SAY "Consultar Lista de Precios registradas"
      STORE pfIl+1 TO pfIl
 ENDIF
 IF LEN(ALLTRIM(vpRv))>0
      @ pfIl, 19 SAY ":" STYLE "BT"
      @ pfIl, 01 SAY "F5" STYLE "BT"
      @ pfIl, 21 SAY "Ver Sucursales"
      STORE pfIl+1 TO pfIl
 ENDIF
 IF viTe=1
      @ pfIl, 19 SAY ":" STYLE "BT"
      @ pfIl, 01 SAY "CTRL DEL" STYLE "BT"
      @ pfIl, 21 SAY "Des-Seleccionar Proveedor"
      STORE pfIl+1 TO pfIl
 ENDIF
 @ pfIl, 19 SAY ":" STYLE "BT"
 @ pfIl, 01 SAY "CTRL ->" STYLE "BT"
 @ pfIl, 21 SAY "Ir al campo derecho, llegando al final pasa al Detalle"
 STORE pfIl+1 TO pfIl
 IF viTe>1
      @ pfIl+0, 19 SAY ":" STYLE "BT"
      @ pfIl+1, 19 SAY ":" STYLE "BT"
      @ pfIl+0, 01 SAY "CTRL <-" STYLE "BT"
      @ pfIl+1, 01 SAY "CTRL HOME" STYLE "BT"
      @ pfIl+0, 21 SAY "Ir al campo izquierdo"
      @ pfIl+1, 21 SAY "Ir al Primer campo"
      STORE pfIl+2 TO pfIl
 ENDIF
 @ pfIl+0, 19 SAY ":" STYLE "BT"
 @ pfIl+1, 19 SAY ":" STYLE "BT"
 @ pfIl+0, 01 SAY "CTRL END" STYLE "BT"
 @ pfIl+1, 01 SAY "FLECHA ABAJO" STYLE "BT"
 @ pfIl+0, 21 SAY "Ir al Último campo"
 @ pfIl+1, 21 SAY "Ir al campo inferior, llegando al final pasa al Detalle"
 STORE pfIl+2 TO pfIl
 IF viTe<3
      @ pfIl, 19 SAY ":" STYLE "BT"
      @ pfIl, 01 SAY "FLECHA ARRIBA" STYLE "BT"
      @ pfIl, 21 SAY "Ir al campo superior"
      STORE pfIl+1 TO pfIl
 ENDIF
 @ pfIl+0, 19 SAY ":" STYLE "BT"
 @ pfIl+1, 19 SAY ":" STYLE "BT"
 @ pfIl+0, 01 SAY "ENTER" STYLE "BT"
 @ pfIl+1, 01 SAY "TAB" STYLE "BT"
 @ pfIl+0, 21 SAY "Ir al siguiente campo, llegando al final pasa al Detalle"
 @ pfIl+1, 21 SAY "Pasar al Detalle"
 DO ruTinahlp
 = INKEY(0.01)
 DEACTIVATE WINDOW mpAn_hlp
ENDPROC
*
PROCEDURE Del_Files
 DO q1_0000a
 DO q2_0000a
 DO deL_file1
 STORE 99 TO mkEy
 RELEASE viTe, viT1, ciTx, viOm, vcL0, vpIc, ckEy, vsW0, vsW1, vsW2, vsW3,  ;
         vsW4, vsWw
 RELEASE csWw, vsWr, irEc, vrEc, frEc, urEc, crEc, crE1, xrEc, ifIl, ufIl,  ;
         vfIl, ffIl
 RELEASE cfIl, ifFs, ufFs, vfFs, ffFs, cfFs, ifFr, ufFr, vfFr, ffFr, cfFr,  ;
         ifFt, ufFt
 RELEASE vfFt, ffFt, ifFu, ufFu, vfFu, ffFu, ifFv, ufFv, vfFv, ffFv, ifFw,  ;
         ufFw, vfFw
 RELEASE ffFw, ifFx, ufFx, vfFx, ffFx, vfB1, vfB2, vfB3, vfB4, vfB5, vfB6,  ;
         vcB1, vcB2
 RELEASE vcB3, vcB4, vcB5, vcB6, vcB7, vtB1, vtB2, vtB3, vtB4, vdIa, idIa,  ;
         udIa, xdIa
 RELEASE vmEs, imEs, umEs, xmEs, vaNo, iaNo, uaNo, xaNo, vpRv, ipRv, upRv,  ;
         cpRv, xpRv
 RELEASE voP1, ioP1, uoP1, voP2, ioP2, uoP2, voP3, ioP3, uoP3, voP4, ioP4,  ;
         uoP4, voP5
 RELEASE ioP5, uoP5, voP6, ioP6, uoP6, voP7, ioP7, uoP7, vtPo, itPo, utPo,  ;
         xtPo, ctPo
 RELEASE vnTp, inTp, unTp, cnTp, vdC1, idC1, udC1, cdC1, vdC2, idC2, udC2,  ;
         cdC2, vdC3
 RELEASE idC3, udC3, cdC3, vdC4, idC4, udC4, cdC4, vdC5, idC5, udC5, cdC5,  ;
         vdC6, idC6
 RELEASE udC6, cdC6, vdC7, idC7, udC7, cdC7, vcDg, icDg, ucDg, ccDg, vdCc,  ;
         idCc, udCc
 RELEASE cdCc, vlEt, vnEm, vtI1, vtI2, vtI3, vtI4, cpR1, vnPr, xnPr, vsUc,  ;
         vdIr, vdIs
 RELEASE vfEm, vfEc, cfEc, xfEc, vrF1, vrF2, vcOd, ccOd, vcD1, vdEs, vdCr,  ;
         vcUc, vnUc
 RELEASE vcUx, vnUx, vmNd, vsIg, vtCa, vfOb, vcFr, vcIf, vpD1, vpD2, vpD3,  ;
         vpD4, vpD5
 RELEASE vpD6, vpD7, vpD8, vfCt, vcM3, vsTo, csTo, vmTt, vtIp, vpIe, vtP1,  ;
         icLn, ucLn
 RELEASE vuLt, vfO1, vcF1, vcI1
 RELEASE vpAn_11, vpAn_let, vpAn_le1, vpAn_le2, vpAn_le3, vpAn_le4, vpAn_le5
 RELEASE exTended
 RELEASE exTended
 RELEASE exTended
 RELEASE exTended
 RELEASE exTended
 RELEASE exTended
 RELEASE exTended
 CLEAR RESOURCES
 FLUSH
ENDPROC
*
PROCEDURE Del_File1
 CLOSE INDEXES
 CLOSE DATABASES
 STORE 99 TO mkEy
 DO deL_file2 WITH "1", "S"
 DO deL_file2 WITH "2", "S"
 RELEASE ntM1, ntM2
ENDPROC
*
